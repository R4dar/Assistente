<html>
  <head>
    <title>{{ telegram_username  }}</title>
    <style>
      * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      }

      html, body {
      font-family: 'Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif';
      font-weight: 400;
      font-size: 16px;
      color: #333;
      }

      .center-text {
      text-align: center;
      }

      main {
      margin-top: 100px;
      padding: 20px;
      }

      img.logo {
      display: block;
      margin: 0 auto;
      max-width: 100%;
      margin-bottom: 30px;
      }

      h2 {
      font-size: 2em;
      font-weight: 100;
      }

      footer {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      padding: 20px;
      }

      footer p {
      font-weight: 300;
      font-size: 1.0em;
      }

      a {
      color: #31D8A0;
      text-decoration: none;
      }

      a:hover,
      a:focus {
      color: #31D8A0;
      }
    </style>
    <script type="text/javascript" src="//unpkg.com/@feathersjs/client@^3.0.0/dist/feathers.js"></script>
  </head>
  <body>
    <main class="container">
      <h2 class="center-text">{{ telegram_username }} REST API</h2>
      <script async src="https://telegram.org/js/telegram-widget.js?4" data-telegram-login="{{ telegram_username }}" data-size="large" data-onauth="onTelegramAuth(user)" data-request-access="write"></script>
      <footer>
        <p class="center-text">For more information on Feathers see our <a href="/swagger" title="swagger UI documentation" target="blank">swagger UI documentation</a>.</p>
      </footer>
    </main> 
    <script type="text/javascript">
      var app = window.app = feathers();
      var rest = feathers.rest('{{ audience }}');
      app.configure(rest.fetch(window.fetch));
      function onTelegramAuth(user){
        let clone = {}
        let p = ['id', 'first_name', 'last_name', 'auth_date', 'hash']
        for(let i in p) {
          if (p[i] === 'id') {
            clone['telegramId'] = user[p[i]];
          } else {
            clone[p[i]] = user[p[i]];
          }
        }
        return app.service('users').create(clone).then(function(){
          alert('{{ greetings }}');
        }).catch(function(err){
          alert('Erro '+err.code+': '+err.message);
        })
      }
    </script>
  </body>
</html>
